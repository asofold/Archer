Archer - lists
-----------------------------------------------------------------

Add features for target practice with arrows on signs!


Features
-----------------------------------------------------------------

- Set up a sign with certain configurable content, 
    which then serves as target practice for archers.
    Default lines (no spaces, small letters):
    ooooo
    ooxxxoo
    ooxxxoo
    ooooo
- Receive information about players hitting targets by chat,
    including distance off target and shooting distance.
- Only players that subscribe explicitly can receive or generate 
    notifications.
- Configure various aspects, such as target center offset, 
    maximum distance off target, maximum notification distance,
    cross world notification... 


Commands and Permissions
-----------------------------------------------------------------
(command, permission, description)
- /archer reload 
    archer.reload
    To reload the settings.
- /archer notify
    archer.notify
    Toggle if to take part in the notifications about hitting signs.


Configuration
-----------------------------------------------------------------
- target.lines: A list of 4 string entries for the lines of a target sign.
    Use § for color codes.
- target.trim: Disregard leading or trailing white space for comparison
    of target sign lines.
- target.strip-color: Disregard chat color for comparison of target signs.
- target.ignore-case: Disregard letter case for comparison of target signs.
- shooter.distance.min|max: Minimum/maximum distance that can lead to
    notifications about hitting target signs. 
    Set to 0 to deactivate.
- notify.distance: Maximum distance to target sign, at which to notify
    players about hits.
    Set to 0 to deactivate.
- notify.cross-world: If to notify players that are in a differing world.
- off-target.divisor: Target accuracy is displayed up to 1000 parts of 
    the maximum distance off center, the divisor lets you sort hits
    into categories of lower numbers.
- off-target.distance: Maximum distance off target.
- offset: x,y,z for target center offset. 
    (x,z would not make any sense, if signs are not always placed
        in the same n-w-s-e orientation!)
- step: This is the step length for finding a more accurate hitting
    position, the arrow can be up to its speed away from target,
    as by current CraftBukkit implementation (roughly up to 3).
- verbose: If true, this will output some details about shots to
    the console.
- permissions.use: If to use superperms - if set to false,
    players can use the normal functions without permission checks.
- players.expire-offline: Duration in minutes after which offline 
    player data / notification state expire.
    Set to 0 to never expire data (until restart/reload).

Method
-----------------------------------------------------------------
For target signs:
1. The player location when shooting decides about the target distance,
    of course the distance will only be calculated when hitting a target.
    (One could use the arrow spawn location, but standing in one spot,
     would now not change the distance.)
2. Internally the arrow location for hitting a block, which is passed to
    plugins can be off by roughly the speed of the arrow, so a step wise
    checking for air is done, the first non air block will be considered
    as hit.
3. If a sign with the predefined content is found:
    A correction of the exact hitting location is calculated, to get the
    location where the arrow hits the plane where the sign is attached to.


Planning
-----------------------------------------------------------------

*** Features
!(add) Contest !
?(add) notify greedy option: get all archer events from all worlds and distances
!(add) Individual target settings to be set in-game, including target names.
!(add) Allow other blocks than air to be passed for step calculation.
!(add) Create target sign option.
?(add) Something for multiple targets, including position correction (corrected off block...).
!(add) Option to remove arrows.
!(add) Option to refund arrows.
!(add) Option to name target signs on sign (4th line ?).
!(add) Always notify the shooter.

*** Optimization
!(refactor) To use settings objects (especially to differentiate signs from other targets later).
?(add) Auto unsubscribe (if not received or generated a notification for some time). [Could be problematic] 
?(add) configurable or not: use projectile location as reference not the player location (!)
!(add) Target block finding (more precise, even: calculate block transitions directly).
!(consider) Arrow length + position offset: Use direction of arrow to estimate hit distance from the sign,
    use a different projection.  
!(add) Option to forget PlayerData for players that logged out for longer than a certain amount of time. 

*** API
!(add) Events: hit, miss, shoot


STACK
-----------------------------------------------------------------

!(add) statistics about hits (angle, distance + off categorized somehow ?)
!(add) Angle towards aim + restrictions

*** categorize / sort in :
? step: check if is longer than l first !

?opt: getHitPos: use coordinates and only get the block if block really changed 

!(add) Contests with variable parameters: /archer contest create myconstest123 bestof3 mindist=20
!(add) Configurable contests, that players can subscribe to (number of shots, max-fail, way of counting, target-names/positions).

!(add) Named targets (by sign) a) fourth line prefix + suffix b) fourth line indicating where the name is found!

!(add) configurable hit message:  player name, display name, shooting distance, off target, arrow speed (!), ?arrow initial speed, target coordinates? ! 




*** MINIMUM 0.2.0 :
*** named targets


VERSION HISTORY
-----------------------------------------------------------------

(0.2.0)
- (adjust) Different message to shooter than to others.
- (add) Notify the shooter about hits, even if more far away than notification distance.
- (add) Expiration for data / notification state of offline players (configurable duration).

(0.1.0)
- (bugfix) Take into account the players eye height.
- (add) Allow use without permissions.
- (bugfix) Remove debug output for readLines.

(0.0.0) Initial version.

